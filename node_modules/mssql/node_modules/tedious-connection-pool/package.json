{
  "name": "tedious-connection-pool",
  "version": "0.1.1",
  "description": "Connection Pool for tedious.",
  "main": "lib/connection-pool.js",
  "dependencies": {
    "generic-pool": "2.0.3"
  },
  "scripts": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pekim/tedious-connection-pool.git"
  },
  "keywords": [
    "tedious",
    "connection",
    "pool"
  ],
  "author": {
    "name": "Mike D Pilsbury"
  },
  "contributors": [
    {
      "name": "e11137",
      "email": "rogelio.canedo@gmail.com"
    }
  ],
  "license": "MIT",
  "devDependencies": {
    "tedious": "0.0.7",
    "mocha": "1.6.0",
    "async": "0.1.22"
  },
  "licenses": "MIT",
  "readme": "# tedious-connection-pool\nA simple connection pool for [tedious](http://github.com/pekim/tedious).\n\n    Status: Experimental\n\n## Example\nThe only difference from the regular tedious API is how the connection is obtained.\nOnce a Connection object has been acquired, the tedious API can be used with the\nconnection as normal.\n\n```javascript\nvar ConnectionPool = require('tedious-connection-pool');\n\nvar pool = new ConnectionPool(poolConfig, connectionConfig);\n\npool.requestConnection(function (err, connection) {\n  if(!err) {\n    var request = new Request('select 42', function(err, rowCount) {\n      assert.strictEqual(rowCount, 1);\n    \n      // Release the connection back to the pool.\n      connection.close();\n    });\n\n    request.on('row', function(columns) {\n      assert.strictEqual(columns[0].value, 42);\n    });\n\n    connection.on('connect', function(err) {\n      connection.execSql(request);\n    });\n  }\n});\n```\n\nWhen the connection is closed it is returned to the pool.\nIt is then available to be reused.\n\n##Class: ConnectionPool\n\n### new ConnectionPool(poolConfig, connectionConfig)\n\n* `poolConfig` {Object}\n  * `max` {Number} The maximum number of connections there can be in the pool. Default = `10`\n  * `min` {Number} The minimun of connections there can be in the pool. Default = `0`\n  * `idleTimeoutMillis` {Number} The Number of milliseconds before closing an unused connection. Default = `30000`\n  \n* `connectionConfig` {Object} The same configuration that would be used to [create a\n  tedious Connection](http://pekim.github.com/tedious/api-connection.html#function_newConnection).\n\n### connectionPool.requestConnection(callback)\n\n* `callback` {Function} Callback function\n  * `error` {Error Object}\n  * `connection` {Object} A [Connection](http://pekim.github.com/tedious/api-connection.html)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pekim/tedious-connection-pool/issues"
  },
  "_id": "tedious-connection-pool@0.1.1",
  "dist": {
    "shasum": "77cf8985d7218c699f75dbe00ece6e1d174c419a"
  },
  "_from": "tedious-connection-pool@>=0.1.1",
  "_resolved": "https://registry.npmjs.org/tedious-connection-pool/-/tedious-connection-pool-0.1.1.tgz"
}
